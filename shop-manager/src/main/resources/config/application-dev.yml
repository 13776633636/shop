server:
  port: 9090                                # 项目访问端口，默认 8080
  servlet:                                 # 项目访问路径，默认 /
    context-path: /shop-manager

oss:
  qiniu:
    domain: http://qdnolc9h2.bkt.clouddn.com # 访问域名(默认使用七牛云测试域名)
    accessKey: LbO-QxxxxxxxxoF4H3p # 公钥
    secretKey: TyJAtXx7xxxx_gxbA5k # 私钥
    bucketName: codeduck  #存储空间名称


# Spring
spring:
  # redis 缓存
  redis:
    timeout: 10000                          # 连接超时时间
    host: 192.168.10.100                    # Redis服务器地址
    port: 6379                              # Redis服务器端口
    database: 0                             # 选择哪个库，默认0库
    lettuce:
      pool:
        max-active: 1024                    # 最大连接数，默认 8
        max-wait: 10000                     # 最大连接阻塞等待时间，单位毫秒，默认 -1
        max-idle: 200                       # 最大空闲连接，默认 8
        min-idle: 5                         # 最小空闲连接，默认 0
    password: root
  # 数据源
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.10.100:3306/shop?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    # 指定 druid 连接池以及 druid 连接池配置
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 1                       # 初始连接数
      max-active: 20                        # 最大连接数
      max-idle: 20                          # 最大空闲
      min-idle: 1                           # 最小空闲
      max-wait: 60000                       # 最长等待时间
  # freemarker 模板引擎
  freemarker:
    cache: false
    charset: UTF-8
    content-type: text/html;charset=UTF-8
    enabled: true
    suffix: .ftl
    template-loader-path: classpath:/views/
    # 配置模板里是否可以直接取request的属性 request是别名
    request-context-attribute: request
    # 配置将request和session中的键值添加到
    # AbstractTemplateView类的renderMergedOutputModel方法中的model这个Map参数中
    expose-request-attributes: true
    expose-spring-macro-helpers: true
    # 配置模板里是否可以直接取session的属性 true 是允许
    expose-session-attributes: true
    settings:
      tag_syntax: auto_detect               # 配置标签语法为自动，页面可以将 <> 改为 []，为了区别 html 标签
      template_update_delay: 0              # 模板更新时间，单位秒
      default_encoding: UTF-8               # 默认编码字符集
      output_encoding: UTF-8                # 模板输出编码字符集
      locale: zh_CN                         # 本地化配置
      date_format: yyyy-MM-dd               # 日期格式化
      time_format: HH:mm:ss                 # 时间格式化
      datetime_format: yyyy-MM-dd HH:mm:ss  # 日期时间格式化
      number_format: #.##                   # 数字格式化
      boolean_format: true,false            # boolean格式化
      # ignore,debug,html_debug,rethrow
      # 1.TemplateExceptionHandler.IGNORE_HANDLER简单地压制所有异常
      # 它对处理异常没有任何作用，也不会重新抛出异常，页面可以正常渲染，后台抛异常
      # 2.TemplateExceptionHandler.DEBUG_HANDLER打印堆栈信息和重新抛出异常。这是默认的异常控制器
      # 3.TemplateExceptionHandler.HTML_DEBUG_HANDLER和DEBUG_HANDLER相同
      # 但是可以格式化堆栈跟踪信息，HTML页面，建议使用它而不是DEBUG_HANDLER
      # 4.TemplateExceptionHandler.RETHROW_HANDLER简单重新抛出所有异常而不会做其他的事情
      # 5.使用自定义异常类实现TemplateExceptionHandler重写handleTemplateException方法
      template_exception_handler: html_debug
  mvc:
    static-path-pattern: /static/**
logging:
  level:
    com.xxxx.manager.mapper: debug
dubbo:
  server: true
  application:
    # 应用名称
    name: rpc-consumer
  registry:
    # 注册中心地址
    address: zookeeper://192.168.10.100:2181?backup=192.168.10.100:2182,192.168.10.100:2183
  protocol:
    #协议名称
    name: dubbo
    #协议端口
    port: 20882
  scan:
    #扫描包的位置
    base-packages: com.xxxx.manager
# Mybatis-plus配置
mybatis-plus:
  #配置Mapper映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置MyBatis数据返回类型别名（默认别名是类名）
  type-aliases-package: com.xxxx.manager.pojo
  configuration:
    # 自动驼峰命名
    map-underscore-to-camel-case: true

goods.category.list.key: goods:category:list:goodsCategoeyList
#用户票据key
user.ticket: user:userTicket